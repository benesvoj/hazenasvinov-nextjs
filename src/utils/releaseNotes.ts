import {ReleaseNote} from '@/types';

// Re-export the interface for convenience
export type {ReleaseNote};

export const releaseNotes: ReleaseNote[] = [
  {
    version: '2.8.0',
    date: '2025-09-11',
    title: 'Database Migration & Code Quality Improvements',
    description:
      'Comprehensive database migration from legacy category system to modern category_id architecture, extensive code quality improvements with pre-commit hooks, and enhanced blog content security with DOMPurify integration.',
    features: [
      '🗄️ Complete Database Migration - Migrated from legacy category VARCHAR fields to modern category_id UUID system',
      '🔧 Pre-commit Hooks - Automated code quality checks with ESLint, Prettier, and TypeScript validation',
      '🛡️ Enhanced Security - DOMPurify integration for safe HTML content rendering in blog posts',
      '📊 Database Schema Modernization - Updated all tables, views, and functions to use category_id',
      '🎯 Code Refactoring - Extracted validation logic into reusable functions to reduce duplication',
      '🔄 Data Integrity - Comprehensive database verification scripts and migration completion tools',
      '📱 SSR Compatibility - Fixed DOMPurify browser compatibility for server-side rendering',
      '🎨 Code Formatting - Consistent code style with Prettier and ESLint v9 configuration',
      '⚡ Performance Optimization - Improved database queries and component rendering',
      '🔍 Type Safety - Enhanced TypeScript type definitions and error handling',
    ],
    improvements: [
      '⚡ Database Performance - Optimized queries with proper foreign key relationships',
      '🎯 Code Maintainability - DRY principle implementation with reusable validation functions',
      '📊 Data Consistency - Unified category handling across all application components',
      '🔄 Migration Safety - Comprehensive verification scripts to ensure data integrity',
      '📱 User Experience - Improved category selection with auto-selection for single category',
      '🎨 Code Quality - Automated formatting and linting with pre-commit hooks',
      '🛡️ Security Enhancement - Safe HTML content rendering with DOMPurify sanitization',
      '🔍 Error Handling - Better error messages and debugging capabilities',
      '📋 Documentation - Comprehensive migration guides and database schema documentation',
      '🎯 Type Safety - Improved TypeScript type definitions and compilation checks',
    ],
    bugFixes: [
      "🐛 Fixed 'column members_1.category does not exist' errors in training session generator",
      "🔧 Resolved 'column categories_1.code does not exist' errors on landing page",
      "📝 Fixed React prop warning for unrecognized 'closeOnOverlayClick' prop in UnifiedModal",
      '🖼️ Corrected category selection dropdown being disabled and empty on first load',
      '⚡ Fixed TypeScript errors in API routes with unawaited Supabase client calls',
      '📊 Resolved database view dependencies on removed category.code column',
      '🔐 Fixed DOMPurify browser compatibility issues during server-side rendering',
      '🛡️ Corrected category lookup logic to use id instead of code in useCategoryPageData',
      '👥 Fixed member filtering logic in attendance and lineup management',
      '📱 Resolved category auto-selection issues in coach portal attendance system',
    ],
    technical: [
      '🏗️ Migrated 15+ database tables from category VARCHAR to category_id UUID',
      '🗄️ Updated all database views (club_category_details, user_role_summary) to use category_id',
      '🔌 Created comprehensive SQL migration scripts for safe database transformation',
      '🎭 Implemented pre-commit hooks with Husky, lint-staged, ESLint v9, and Prettier',
      '📱 Fixed DOMPurify SSR compatibility with dynamic imports and browser checks',
      '🔄 Refactored validation logic in blog post management to eliminate code duplication',
      '🎨 Updated ESLint configuration to v9 format with proper TypeScript support',
      '🗄️ Created database verification scripts to ensure migration completeness',
      '🔧 Fixed all remaining category.code references across the entire codebase',
      '📊 Implemented proper foreign key constraints and data integrity checks',
      '🎯 Enhanced category selection UI with automatic single-category selection',
      '🔍 Created comprehensive migration documentation and troubleshooting guides',
      '🛡️ Implemented safe HTML content rendering with DOMPurify sanitization',
      '⚡ Optimized database queries and component rendering performance',
      '📱 Enhanced mobile experience with improved category selection and filtering',
    ],
  },
  {
    version: '2.7.0',
    date: '2025-09-06',
    title: 'Build System & Performance Optimization',
    description:
      'Comprehensive build system fixes, React Hook dependency optimization, TypeScript error resolution, and performance improvements across the entire application. All console errors resolved and production build successfully optimized.',
    features: [
      '🔧 Build System Fixes - Resolved all TypeScript compilation errors and build warnings',
      '⚡ React Hook Optimization - Fixed all React Hook dependency warnings across components',
      "🎯 TypeScript Error Resolution - Eliminated implicit 'any' type errors and type safety issues",
      '🏗️ Runtime Error Fixes - Resolved useUser context errors during static generation',
      '🔄 Performance Optimization - Improved component rendering and state management',
      '🛡️ Error Boundary Enhancement - Better error handling and graceful fallbacks',
      '📱 Public Page Optimization - Fixed context loading issues on public pages',
      '🎨 Component Architecture - Improved separation of concerns and code maintainability',
      '👥 Coach Attendance System - Automatic attendance record generation during training session creation',
      '📋 Member Lineups Management - Complete lineup member management for coaches with category-based filtering',
      '🎯 Training Session Generator - Enhanced training session creation with automatic attendance population',
      '📊 Attendance Tracking - Comprehensive attendance management with present/absent status tracking',
      '🔄 Data Integration - Seamless integration between training sessions, lineups, and attendance records',
      '👤 Admin Category Simulation - Admin users can test coach portal with selected category',
      '📱 Coach Portal Optimization - Improved coach portal experience with proper category filtering',
    ],
    improvements: [
      '⚡ Build Performance - Reduced build time and eliminated compilation errors',
      '🎯 Code Quality - Improved TypeScript type safety and error handling',
      '📊 Hook Dependencies - Proper dependency arrays for all useEffect hooks',
      '🔄 State Management - Optimized context usage and component re-rendering',
      '📱 Public Page Loading - Conditional context loading for better performance',
      '🎨 Component Structure - Cleaner, more maintainable component architecture',
      '🛡️ Error Handling - Better error boundaries and user feedback systems',
      '🔍 Debugging - Improved error messages and debugging capabilities',
      '👥 Attendance Workflow - Streamlined attendance record creation and management process',
      '📋 Lineup Management - Enhanced member lineup management with better filtering and search',
      '🎯 Training Sessions - Improved training session creation with automatic attendance population',
      '📊 Data Consistency - Better synchronization between training sessions and attendance records',
      '👤 Admin Testing - Enhanced admin category simulation for testing coach portal functionality',
      '🔄 User Experience - Improved coach portal navigation and category selection',
      '📱 Mobile Optimization - Better mobile experience for attendance and lineup management',
    ],
    bugFixes: [
      '🐛 Fixed React Hook dependency warnings in attendance, lineups, and match components',
      '🔧 Resolved conditional hook usage error in UnifiedTopBar component',
      "📝 Fixed TypeScript implicit 'any' type errors in UserContext and useUpcomingBirthdays",
      '🖼️ Corrected user role filtering logic in useUserRoles hook',
      '⚡ Fixed runtime error with useUser context on home page during build',
      '📊 Resolved missing signOut method in useAuthNew hook',
      '🏃‍♂️ Fixed userProfile null type error in CoachesTopBar component',
      '🔐 Corrected context loading issues on public pages like home and reset-password',
      '🛡️ Fixed build compilation errors preventing production deployment',
      '👥 Resolved component rendering issues with proper error boundaries',
      '📋 Fixed attendance records not being generated during training session creation',
      '🎯 Resolved form data persistence issues in TrainingSessionModal',
      '👥 Fixed member ID extraction errors in attendance record generation',
      '📊 Corrected race condition issues with useCategoryLineups state',
      '🔄 Fixed category value loss on attendance page after navigation',
      '👤 Resolved admin category simulation not working across different layouts',
      '📱 Fixed localStorage integration for admin category simulation data',
    ],
    technical: [
      '🏗️ Fixed all React Hook dependency arrays across 8+ components',
      '🗄️ Resolved TypeScript compilation errors in 5+ files',
      '🔌 Implemented conditional context loading for public pages',
      '🎭 Enhanced error handling in MatchSchedule component for public pages',
      '📱 Optimized component rendering with proper memoization patterns',
      '🔄 Refactored useUserRoles hook to handle missing UserProvider gracefully',
      '🎨 Standardized error handling and loading states across components',
      "🗄️ Fixed implicit 'any' type errors with proper type annotations",
      '🔧 Enhanced useAuthNew hook with missing signOut functionality',
      '📊 Implemented proper error boundaries for build-time context issues',
      '🎯 Optimized build process with conditional provider loading',
      '🔍 Improved debugging capabilities with better error messages and logging',
      '👥 Implemented automatic attendance record generation in TrainingSessionGenerator',
      '📋 Enhanced useCategoryLineups hook with better state management and caching',
      '🎯 Created TrainingSessionModal with proper form state management and validation',
      '📊 Built comprehensive attendance tracking system with present/absent status',
      '🔄 Implemented data synchronization between training sessions and attendance records',
      '👤 Created AdminCategorySimulationContext for admin testing of coach portal',
      '📱 Implemented localStorage integration for cross-layout admin category simulation',
      '🎨 Enhanced coach portal UI with proper category filtering and member management',
      '🗄️ Optimized database queries for attendance and lineup data with proper error handling',
      '🔧 Fixed race conditions in attendance record generation and lineup member fetching',
    ],
  },
  {
    version: '2.6.0',
    date: '2025-09-04',
    title: 'Meeting Minutes Agenda System',
    description:
      'Comprehensive meeting minutes management system with advanced attendee management, role-based access control, and intuitive UI components for both admin and coach portals.',
    features: [
      '📝 Meeting Minutes Management - Complete CRUD operations for meeting minutes with season integration',
      '👥 Advanced Attendee Management - Bulk selection, search, and status tracking for meeting participants',
      '🎯 Role-Based Access Control - Separate admin and coach portals with appropriate permissions',
      '📊 Smart Data Integration - Automatic member lookup and user profile management',
      '🎨 Modern UI Components - Reusable MeetingMinutesCard and AttendeesModal components',
      '📱 Responsive Design - Mobile-friendly interface with HeroUI components',
      '🔍 Advanced Filtering - Search and filter meetings by season, writer, and date',
      '📄 Attachment Support - File upload and management for meeting documents',
      '🔄 Real-time Updates - Live data synchronization with Supabase backend',
    ],
    improvements: [
      '⚡ Performance Optimization - Efficient data fetching with proper pagination',
      '🎨 UI/UX Enhancements - Intuitive 3-column attendee grid layout with status indicators',
      '📊 Data Consistency - Unified member and user data handling across components',
      '🔄 Smart Workflows - Streamlined meeting creation and attendee management process',
      '📱 Mobile Experience - Responsive design optimized for all screen sizes',
      '🎯 User Experience - Clear visual feedback and status management for attendees',
      '🔍 Search Functionality - Advanced filtering and search capabilities',
      '📄 Document Management - Integrated file attachment system for meeting documents',
    ],
    bugFixes: [
      '🐛 Fixed foreign key constraint errors in meeting_attendees table',
      '🔧 Resolved TypeScript compilation errors in Select components',
      '📝 Fixed user data structure inconsistencies between admin and coach portals',
      '🖼️ Corrected attendee display logic for member vs user data',
      '⚡ Fixed infinite loop issues in Autocomplete component filtering',
      '📊 Resolved database schema conflicts between auth.users and members tables',
      '🔍 Fixed search functionality in attendee selection modal',
      '🎨 Corrected UI alignment issues in User component display',
    ],
    technical: [
      '🏗️ Created comprehensive meeting minutes database schema with proper relationships',
      '🗄️ Implemented useMeetingMinutes and useFetchMembers hooks for data management',
      '🔌 Built AttendeesModal component with bulk selection and search capabilities',
      '🎭 Enhanced MeetingMinutesCard component with responsive 3-column layout',
      '📱 Optimized component rendering with proper memoization and state management',
      '🔄 Implemented real-time data synchronization with Supabase',
      '🎨 Migrated to HeroUI components for consistent design language',
      '🗄️ Created SQL migration scripts for meeting_attendees foreign key fixes',
      '🔧 Fixed TypeScript type definitions for meeting minutes and attendees',
      '📊 Implemented proper error handling and loading states across all components',
      '🎯 Enhanced form validation and user feedback systems',
      '🔍 Built advanced search and filtering functionality with pagination support',
    ],
  },
  {
    version: '2.5.0',
    date: '2025-09-02',
    title: 'Modal Refactoring & Navigation Visibility Fixes',
    description:
      'Major refactoring of blog post management modals into reusable components, comprehensive coach portal authentication fixes, unified login system implementation, and resolved React Hook dependency warnings for better code maintainability.',
    features: [
      '🔧 Modal Component Refactoring - Extracted AddPostModal, EditPostModal, and DeletePostModal into separate reusable components',
      '📅 Custom Date Creation - Added ability to set custom creation dates for blog posts',
      '🎯 Navigation Visibility Control - Fixed admin link visibility to properly respect database settings',
      '⚡ React Hook Optimization - Resolved dependency warnings with proper useCallback implementation',
      '🎨 Component Architecture - Improved separation of concerns and code reusability',
      '📱 Better User Experience - Enhanced modal interactions with proper form state management',
      '🏃‍♂️ Coach Portal Authentication - Fixed multiple user profile handling and PGRST116 errors',
      '🔐 Unified Login System - Created single login page with admin and coach portal tabs',
      '🛡️ Protected Route Fixes - Resolved coach portal sidebar visibility and authentication issues',
    ],
    improvements: [
      '⚡ Code Maintainability - Reduced duplication and improved component organization',
      '🎨 UI Consistency - Standardized modal components across the application',
      '📊 Database Integration - Admin navigation now properly respects page visibility settings',
      '🔄 State Management - Cleaner form state handling in modal components',
      '📱 Component Reusability - Modal components can now be used in other parts of the application',
      '🎯 User Experience - Better form validation and error handling in modals',
      '🏃‍♂️ Coach Portal UX - Improved login flow with unified interface for admin and coach access',
      '🔐 Authentication Flow - Streamlined login process with role-based redirection',
      '🛡️ Security Enhancements - Better error handling and user feedback in protected routes',
    ],
    bugFixes: [
      '🐛 Fixed admin link showing in navigation despite database visibility set to false',
      '🔧 Resolved React Hook dependency warning in AssignCategoryModal component',
      '📝 Fixed TypeScript implicit any type error in useUserRoles hook',
      '🖼️ Corrected Next.js 15 Suspense boundary requirement for useSearchParams',
      '⚡ Fixed build compilation errors preventing production deployment',
      '📊 Resolved hardcoded admin menu item ignoring database visibility settings',
      '🏃‍♂️ Fixed PGRST116 error when admin users with multiple profiles tried to access coach portal',
      '🔐 Resolved coach portal sidebar showing even when user was not logged in',
      '🛡️ Fixed ProtectedCoachRoute syntax error preventing proper error handling',
      '👥 Corrected multiple user profile handling in coach portal authentication',
    ],
    technical: [
      '🏗️ Created separate modal components for blog post management (AddPostModal, EditPostModal, DeletePostModal)',
      '🗄️ Implemented proper useCallback patterns for React Hook dependency management',
      '🔌 Fixed dynamic routing system to respect database page visibility settings',
      '🎭 Enhanced error handling and loading states in modal components',
      '📱 Optimized component rendering with proper memoization',
      '🔄 Refactored form state management for better performance and maintainability',
      '🎨 Standardized modal component interfaces and prop handling',
      '🗄️ Extended blog post creation with custom date functionality',
      '🔧 Fixed Next.js 15 compatibility issues with Suspense boundaries',
      '🏃‍♂️ Refactored coach portal authentication to handle multiple user profiles',
      '🔐 Implemented unified login system with tabbed interface for admin and coach access',
      '🛡️ Enhanced ProtectedCoachRoute component with proper error handling and role checking',
      '👥 Updated useUserRoles hook to handle multiple profiles and legacy role systems',
      '🗄️ Fixed Supabase queries to use .find() instead of .single() for multiple profile scenarios',
    ],
  },
  {
    version: '2.4.0',
    date: '2025-08-29',
    title: 'Club Selector & Team Management System Overhaul',
    description:
      'Major refactoring of the club and team selection system, improved match filtering logic, enhanced team suffix display, and comprehensive UI/UX improvements across the matches management system.',
    features: [
      '🏢 Smart Club Selector - Intelligent club filtering with category-based team management',
      '🎯 Enhanced Match Filtering - Advanced filtering by club, category, and team combinations',
      '🏷️ Intelligent Team Suffix Logic - Smart display of team suffixes only when needed',
      '🔄 Unified Data Flow - Consistent data handling between public and admin match views',
      '📱 Improved Club Grid Layout - Better responsive design with proper spacing and centering',
      '🎨 HeroUI Integration - Complete migration to HeroUI components for consistency',
      '🎛️ Landing Page Section Management - New admin controls for hiding/showing main page sections',
    ],
    improvements: [
      '⚡ Performance Optimization - Eliminated infinite loading states in club selector',
      '🎨 UI/UX Enhancements - Better club button layouts and visual feedback',
      '📊 Data Consistency - Unified team suffix logic across all match views',
      '🔄 Smart Filtering - Club selection now properly filters matches by all relevant teams',
      '📱 Responsive Design - Improved club grid layout with proper centering',
      '🎯 User Experience - Clear visual feedback for selected clubs and category',
      '🎛️ Content Management - Admin can now control visibility of landing page sections',
    ],
    bugFixes: [
      '🐛 Fixed endless loading in ClubSelector component',
      '🔧 Resolved team suffix display inconsistencies between hooks',
      '📝 Fixed club filtering not working without category selection',
      '🖼️ Corrected club grid layout and centering issues',
      '⚡ Fixed match filtering by club when multiple teams exist',
      '📊 Resolved data transformation issues in club-team mapping',
    ],
    technical: [
      '🏗️ Refactored ClubSelector to use proper team-based data structure',
      '🗄️ Implemented centralized team suffix logic using transformMatchWithTeamNames utility',
      '🔌 Enhanced data flow between ClubSelector and matches page',
      '🎭 Improved error handling and loading states in club selection',
      '📱 Optimized club grid layout with responsive design patterns',
      '🔄 Unified usePublicMatches and useFetchMatches team suffix logic',
      '🎨 Standardized UI components and improved visual consistency',
      '🎛️ Created useSectionVisibility hook for dynamic section rendering',
      '🗄️ Extended page visibility system to support landing page sections',
    ],
  },
  {
    version: '2.3.0',
    date: '2025-08-21',
    title: 'Component Refactoring & UI Consistency Improvements',
    description:
      'Significant refactoring of admin components for better maintainability, improved UI consistency with HeroUI components, and enhanced user experience in the matches management system.',
    features: [
      '🔧 Component Refactoring - Extracted AddMatchModal into separate reusable component',
      '🎨 UI Consistency - Replaced custom delete confirmation modals with standardized DeleteConfirmationModal',
      '📝 Enhanced Form Management - Improved season and category selection in match creation',
      '🔄 Better State Management - Cleaner separation of concerns between components',
      '🎯 Improved User Experience - More intuitive and consistent modal interactions',
    ],
    improvements: [
      '⚡ Code Maintainability - Reduced duplication and improved component organization',
      '🎨 Design Consistency - Unified delete confirmation dialogs across the application',
      '📱 Better Component Structure - Cleaner, more maintainable component architecture',
      '🔍 Enhanced Debugging - Added debug information for season selection troubleshooting',
      '📊 Improved Form Validation - Better handling of season and category dependencies',
    ],
    bugFixes: [
      '🐛 Fixed season selection dropdown visibility issues in admin matches page',
      '🔧 Resolved component prop passing issues between parent and child components',
      '📝 Fixed form data synchronization in AddMatchModal component',
      '🖼️ Corrected component import paths and dependency management',
      '⚡ Fixed component re-rendering issues with proper prop handling',
    ],
    technical: [
      '🏗️ Created AddMatchModal component for better code organization',
      '🗄️ Implemented DeleteConfirmationModal integration across admin pages',
      '🔌 Enhanced component props interfaces with proper TypeScript typing',
      '🎭 Improved error handling and user feedback in modal components',
      '📱 Optimized component rendering and state management',
      '🔄 Refactored modal state management for better performance',
      '🎨 Standardized UI components using HeroUI design system',
    ],
  },
  {
    version: '2.2.0',
    date: '2025-01-13',
    title: 'Dynamic Blog System & Enhanced Admin Features',
    description:
      'Major update introducing a fully dynamic blog system integrated with the landing page, enhanced admin features for blog management, and significant performance improvements.',
    features: [
      '🎉 Dynamic Blog Integration - Blog posts now automatically appear on landing page',
      '📝 Enhanced Blog Post Management - Image uploads, category selection, and rich content editing',
      '🖼️ Image Support - Blog posts can now include featured images with Supabase storage',
      '🏷️ Smart Tagging System - Multiple category selection using HeroUI components',
      '🔍 Advanced Blog Search - Search and filter functionality on blog listing page',
      '📱 Responsive Blog Design - Mobile-friendly layouts with proper image handling',
      '🔄 Related Posts - Automatic suggestions for related content based on tags',
    ],
    improvements: [
      '⚡ Performance Optimization - Fixed infinite API call loops in match scheduling',
      '🎨 UI/UX Enhancements - Professional blog posting dialogs with HeroUI components',
      '📊 Better Content Organization - Landing page now shows latest news first',
      '🔄 Real-time Updates - Blog content updates immediately reflect on public pages',
      '📱 Mobile Experience - Improved responsive design across all blog components',
      '🎯 Content Prioritization - Latest news section moved to top of landing page',
    ],
    bugFixes: [
      '🐛 Fixed infinite API call loops in MatchSchedule and MatchSchedulePage components',
      '🔧 Resolved Supabase client creation issues causing performance problems',
      '📝 Fixed blog post ordering to show newest posts first',
      '🖼️ Resolved image hostname configuration issues for external domains',
      '⚡ Fixed authentication fetch errors with proper error handling and timeouts',
      '📊 Corrected database schema issues for blog post images',
    ],
    technical: [
      '🏗️ Created useFetchBlogPosts hook for centralized blog data management',
      '🗄️ Added image_url column support to blog_posts table schema',
      '🔌 Integrated Supabase storage for blog image uploads',
      '🎭 Enhanced error boundaries and loading states for better user experience',
      '📱 Optimized Next.js Image component usage across all blog components',
      '🔄 Implemented client-side sorting to ensure proper post ordering',
      '🎨 Migrated to HeroUI components for consistent design language',
    ],
  },
  {
    version: '2.1.0',
    date: '2025-01-12',
    title: 'Supabase Integration & Authentication System',
    description:
      'Comprehensive update implementing Supabase database integration, authentication system, and robust error handling for the application.',
    features: [
      '🔐 Complete Authentication System - Login, logout, and session management',
      '👥 User Management - Admin portal for managing users, blocking/unblocking accounts',
      '📊 Login Logging - Track all login attempts with timestamps and user actions',
      '🔄 Password Reset - Email-based password reset functionality',
      '🛡️ Route Protection - Middleware-based admin route security',
      '👤 User Profiles - Editable user information and metadata management',
    ],
    improvements: [
      '⚡ Performance Optimization - Fixed infinite API call loops',
      '🎨 UI/UX Enhancements - Professional login page with HeroUI components',
      '📱 Mobile Responsiveness - Improved mobile experience across all pages',
      '🔍 Better Error Handling - Comprehensive error boundaries and user feedback',
      '📊 Connection Status - Real-time database connection monitoring',
      '🔄 Automatic Reloads - Smart error recovery for chunk loading issues',
    ],
    bugFixes: [
      '🐛 Fixed infinite API call loops in match scheduling components',
      '🔧 Resolved Supabase client creation issues',
      '📝 Fixed blog post management errors',
      '🖼️ Resolved image loading issues with proper Next.js configuration',
      '⚡ Fixed authentication fetch errors',
      '📊 Corrected database permission issues',
    ],
    technical: [
      '🏗️ Implemented Supabase client architecture with proper error handling',
      '🗄️ Created comprehensive database schema for users, posts, and logs',
      '🔌 Built API endpoints for user management and authentication',
      '🎭 Added custom error boundaries for database and chunk loading errors',
      '📱 Optimized Next.js configuration for image domains and webpack',
      '🔄 Implemented automatic login/logout logging system',
      '🎨 Migrated from Headless UI to HeroUI components',
    ],
  },
  {
    version: '2.0.0',
    date: '2025-01-11',
    title: 'Major UI/UX Overhaul & Component System',
    description:
      'Complete redesign of the user interface with modern HeroUI components, improved layouts, and enhanced user experience across all pages.',
    features: [
      '🎨 Modern UI Design - Complete redesign using HeroUI components',
      '📱 Mobile-First Approach - Responsive design optimized for all devices',
      '🎭 Component System - Reusable UI components for consistency',
      '🌙 Dark Mode Support - Full dark/light theme implementation',
      '📊 Enhanced Tables - Professional data tables with sorting and filtering',
      '🎯 Improved Navigation - Better user flow and navigation structure',
    ],
    improvements: [
      '⚡ Performance - Optimized component rendering and data fetching',
      '🎨 Visual Design - Modern, professional appearance throughout',
      '📱 Responsiveness - Better mobile experience across all pages',
      '🔍 User Experience - Improved workflows and interaction patterns',
      '📊 Data Display - Better organization and presentation of information',
      '🔄 State Management - Improved React state handling and updates',
    ],
    bugFixes: [
      '🐛 Fixed component rendering issues',
      '🔧 Resolved layout and styling problems',
      '📝 Corrected form validation and submission',
      '🖼️ Fixed image display and loading issues',
      '⚡ Resolved performance bottlenecks',
      '📱 Fixed mobile responsiveness issues',
    ],
    technical: [
      '🏗️ Migrated from Headless UI to HeroUI component library',
      '🎨 Implemented comprehensive design system with consistent components',
      '📱 Added responsive design patterns and mobile optimizations',
      '🌙 Built theme switching system with dark/light mode support',
      '🔌 Integrated modern React patterns and hooks',
      '📊 Enhanced data table components with advanced functionality',
      '🎭 Created reusable component library for consistent UI',
    ],
  },
  {
    version: '1.0.0',
    date: '2025-01-10',
    title: 'Initial Release - Core Application Foundation',
    description:
      'First release of the TJ Sokol Svinov National Handball Club application with basic functionality and core features.',
    features: [
      '🏠 Landing Page - Club introduction and overview',
      '📊 Match Management - Schedule, results, and standings',
      '👥 Team Categories - Different age groups and teams',
      '📝 Basic Blog System - Static news and announcements',
      '📞 Contact Information - Club contact details and location',
      '🏛️ About Section - Club history and information',
    ],
    improvements: [
      '🎯 User Experience - Intuitive navigation and clear information hierarchy',
      '📱 Responsive Design - Works well on all device sizes',
      '⚡ Performance - Fast loading and smooth interactions',
      '🔍 Accessibility - Proper semantic HTML and keyboard navigation',
      '📊 Data Organization - Clear presentation of club information',
      '🎨 Visual Design - Professional and attractive appearance',
    ],
    bugFixes: [
      '🐛 Initial bug fixes and stability improvements',
      '🔧 Performance optimizations',
      '📝 Content accuracy and updates',
      '🖼️ Image loading and display fixes',
      '⚡ Speed improvements',
      '📱 Mobile experience enhancements',
    ],
    technical: [
      '🏗️ Built on Next.js 15 with React 18',
      '🎨 Styled with Tailwind CSS for modern design',
      '📱 Implemented responsive design patterns',
      '🔌 Set up basic routing and page structure',
      '📊 Created data management and display components',
      '🎭 Built component architecture for maintainability',
      '📱 Optimized for mobile and desktop devices',
    ],
  },
];

// Function to get release notes (now just returns the static data)
export const getReleaseNotes = (): ReleaseNote[] => {
  return releaseNotes;
};

// Legacy function for backward compatibility
export const parseReleaseNotes = (markdown: string): ReleaseNote[] => {
  console.log('parseReleaseNotes called with markdown, returning static data instead');
  return releaseNotes;
};
